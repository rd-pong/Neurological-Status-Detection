function [y1] = NN_model(x1)
%NN_MODEL neural network simulation function.
%
% Auto-generated by MATLAB, 05-May-2021 17:40:47.
% 
% [y1] = NN_model(x1) takes these arguments:
%   x = 28xQ matrix, input #1
% and returns:
%   y = 4xQ matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.824769756919744;-0.819976042969736;-1.70999023407952;-1.43998046815112;-1.0526900285858;-1.05003723258287;-4.06997238075402;-1.69996124148957;-1.14206277148681;-1.01999633777675;-2.20997085482274;-2.29994506668119;24.9333793653043;25.100093081339;24.9000366220974;-1.19998168889358;0.0142092895799671;0.0160004272591366;0;-7.50890102847084;80.0002136295175;80.0002136295175;80.0002136295175;-15.9998779259523;48.5002975555488;49.0004119999602;48.0001831111374;-36.9994659261463];
x1_step1.gain = [0.998119037853208;0.523566128146517;0.69443623945377;0.638990034198243;1.38152875796992;0.706718597517416;0.501260973401298;0.598813967496437;0.978409229338132;0.630919716107269;0.645169261436417;0.471709589163294;0.183839838415527;0.183487805439876;0.183488447623576;0.833346049573499;0.221939994879772;0.219035889270659;0.221951400615034;0.139074791653139;0.100001068158997;0.100001068158997;0.100001068158997;0.0869574448040891;0.0233918942735431;0.0235295258136906;0.023255863469856;0.0243906887073402];
x1_step1.ymin = -1;

% Layer 1
b1 = [4.3252565686421542424;-5.8293226294851425706;-1.001882663505174742;-1.4499462857916398661;-1.181356977737998859;-0.069027046434407948738;3.1880902153171994939;-1.6612112768620483916;2.9301673452955196986;-0.82370888381405782397];
IW1_1 = [-7.9482524253191986219 1.5035024326928205785 -2.8173283538086191236 -0.23433527139023249686 3.9397804330022871966 -3.8169578462374857963 -0.36405267726220308377 0.83034137099185445496 1.1036348203394212852 -0.23081405903749921404 2.3244934181142173912 0.77231118268922105408 -0.58334894230757028399 -0.25001294516890243402 1.0564528303111260232 0.20955305247290340054 6.0509198862178363854 -6.9450149499834310518 -1.1595191734953445017 3.7317639758141951667 4.6051972639851097568 0.053488663073630565714 0.01071529153220134381 -0.061562318638862273401 -2.4825867424501639746 0.70831415693826327296 1.3463090070891157168 -0.11684422544017576684;-1.2550668842780097201 8.1665930407492055565 2.9216018533732701634 0.87603506006656306493 -3.6228160359352119535 1.6742351661272778518 2.0776912942743552826 1.834538897176300809 -5.8238362060635795459 -0.38653429739730105208 -4.0097173396440446425 -2.250083646461897402 -4.4082889648518390757 0.59394953924010618351 7.5119967168374106592 -1.2252140243759113147 -3.0989325720715967805 10.027609642815539459 -3.3263965865025628688 4.3653382207104165502 6.1292484292895554887 -6.2668586283827787398 -1.2076334610480192744 0.23695902428784454408 3.4278747147275443474 0.39970761754051092884 -6.7094183061306784666 0.10091818281211442643;0.88290300303792335068 0.93662048118775897976 -0.77283646933498395537 0.16643811563484700589 0.34674142729215168268 -0.0081288624296670924235 0.72761106058502467153 -0.42084777588190552811 2.234699470703116031 -0.70713057229126941028 0.73714095072785312812 0.17784562089570932208 1.6079582732524504429 -0.049254949516133877951 -0.36884875159591828941 0.091573764595320850113 2.2063828672349004023 0.86797132470508342461 -2.4763343601903207158 -2.7514619916810221234 1.7903127864090064847 0.2679449723184331722 0.99011661517114168962 -0.61027869267905132666 -0.68174957867703800396 -0.15937099454534736642 0.75004922277265417829 -0.082146829786844247079;6.230828740375698338 -0.60627602756511944637 -2.7491413959287940294 -1.4664150854228068521 -2.6060360448440036407 -1.0019647398655533443 -1.2928507419680479451 -0.91542577359860988206 9.9436010185511296555 -2.9102980980203794203 -2.6408025051108179326 4.2396436525102840776 8.8048558635942679729 -5.6197754395688592766 -1.5054101687898309159 -0.45928783068875317364 8.6227930503214320623 -6.4651480714618454471 1.226575206000492857 -4.8671338566354753752 -2.9422973367226838981 1.5925484756088972293 -4.9571734069056487826 0.32081882028613056823 -0.15238280556838534885 3.5771526446854333692 0.68461557335174938466 0.43283318128372666456;0.40064579495746216464 -0.81715433634606160496 0.39759800796942851298 -0.022685176273140792574 0.91567835235551275908 0.26133339935660970799 1.4902705007609657883 -0.12360014880919606428 0.08617780960294972592 1.7186951562239420888 -0.18613087434186711966 -0.12986197821782438644 2.9980179739655041793 -0.88781267750190817623 1.2514802979993409071 -0.19277164431939772249 -8.2686058693186463842 11.493236455102897153 -3.4601141397874224381 -0.94137778961255991206 -2.1082746751496594939 1.0960872981049802899 0.95731875973488145259 -0.34321373834201551745 -1.9844484707415708247 0.50537215479293473575 2.0526533274072189528 -0.19333041779699047802;-0.15473310409405105492 -0.11563514591756722527 -0.069280870357537466253 0.064016856103229574648 -0.21302882456277438816 0.009597286934539161346 -0.28679805677489100812 0.10847131012218025337 -0.31224694344354603226 -0.24213739275670961848 -0.13052366555829020278 -0.13064799955109776541 -0.64040086646709959428 0.16425400189793301631 -0.17889886537641502828 0.0040656317631526522893 2.0161231944077973033 -4.3004859713507359587 2.1185123903909501841 0.92927649600335759938 0.034684365792343740953 -0.30721506151294836195 -0.20798086360643697201 0.081001566058238452794 0.38919432535000847428 -0.066919701852434981815 -0.51653118720454904711 0.04912117530465585219;1.1913516335686389347 0.0373269645393039598 1.058439377131531467 -1.5816437520169757125 0.032060859147618261944 -2.8902080245119559088 6.9959374578067068384 2.2148463273132388274 7.9184777606526424165 1.9795991112424269343 -1.7400134501072725968 1.2533557555478391787 0.12585490699469717435 -0.45256967809444953454 -0.41503412247261850521 -0.19610017039158575414 21.078684675436544893 -14.814750009844866341 -2.9179390251931782707 -7.4557874848631584541 -4.0724713339236595644 -2.1685594427006367191 -1.7118948823234303447 1.0305442191085534276 2.6136561919831931 -0.35541454987447834712 -0.81330266767841230546 0.099841176979395651614;0.20711761960821806206 -0.90005335239567929584 -1.347036342561618083 -0.096851525040597574723 -0.73831519811544321641 -1.1771677431939371328 2.2834056799703037477 -0.17273887339157784071 -3.8101110512766389604 0.61948733993199378567 2.4329448580564356774 -0.099667660288597401119 -3.1595599894560879584 0.4609769099604227871 0.52291164454825478369 0.05530541306381015626 -10.475817708706520293 8.5319467327286400149 0.21960563191950427386 2.1541192455830517893 -3.8545986655155277667 0.0057410363989346445759 0.50116547160116942106 0.15993548967663706595 -3.2529111380527200303 3.6644445352828451945 2.6499011499967046745 -0.67764817034188862266;1.66284612048654723 3.1182420628167175636 -2.5570164364618195307 -0.55866841244902343266 0.73751697725711395925 -3.4675409558020442446 2.2120725437473338637 0.073666151146488723089 0.41705130420750641251 -0.65144450260931574537 -2.2419775947527393889 1.3134914322690374178 -4.7000122177652823297 0.4533726913582974416 0.22786074561867097898 0.2206762301639416668 -0.64088832159017550261 -3.2303198447638696855 4.4899490524643894673 -1.920167022571666271 -3.1402520206653870005 -0.52104262486977870328 -0.28853576492164145773 0.20391354485287169207 2.0355402664686308434 -0.10676647543826439657 -1.1948103913671805909 0.022537338927545974565;-0.68817308351658368348 -3.7293598926688797945 0.60306043675501386225 -0.33641938452439701379 -1.9038574121981830523 3.1018343061465358801 -1.2758383035517042448 -0.30981055929403161775 1.4755765135192875359 -0.0058578526307548591315 1.0518965987247983485 -0.7258643245256828358 0.041549446365235970235 1.0015879483131515659 0.94653453410956522873 -0.19043162127934049055 -2.3095432356229910198 -13.297249813312015831 15.823924154552198473 -6.7609770040105097166 2.3570231226912450317 -0.19768763649929427251 -0.071829028296546790222 -0.13419746375945251771 -1.1728291027253257006 1.2721959100715194424 0.66330934022706589115 -0.13414793378950579106];

% Layer 2
b2 = [27.633282182965235307;9.0387051171624221979;-14.320182033835129332;-22.351805266484774393];
LW2_1 = [-25.215581298166828361 -16.733734548576077117 29.153081136597663203 8.021866864162147337 -2.0193039016816829445 72.364724178296526702 15.862150575451787304 7.807028829343939158 -19.700847638622317248 -14.458400459022945128;-9.787627967393717654 -1.0300205380546918477 -17.140783820137201587 8.0282888912008143478 -0.049721913849513799111 -23.625802531218131008 -10.208083737783825384 9.8151677163970774131 0.87455697743875593364 -14.637239203982694846;34.176781406160948507 16.398686322740413601 1.2040354231351255709 -6.7301470366694422509 16.315185215792272544 21.87894503204112695 -2.5796285571622372679 -15.665856871657435789 13.515013533380752619 17.573773849315440287;0.82642785924423711741 1.3650687640443515125 -13.216332739622194126 -9.3200087185347086915 -14.246159400215086421 -70.617866679084386305 -3.0744382805782648482 -1.9563396740495502257 5.3112771277632253586 11.521865813681879231];

% ===== SIMULATION ========

% Dimensions
Q = size(x1,2); % samples

% Input 1
xp1 = mapminmax_apply(x1,x1_step1);

% Layer 1
a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);

% Layer 2
a2 = softmax_apply(repmat(b2,1,Q) + LW2_1*a1);

% Output 1
y1 = a2;
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Competitive Soft Transfer Function
function a = softmax_apply(n,~)
  if isa(n,'gpuArray')
    a = iSoftmaxApplyGPU(n);
  else
    a = iSoftmaxApplyCPU(n);
  end
end
function a = iSoftmaxApplyCPU(n)
  nmax = max(n,[],1);
  n = bsxfun(@minus,n,nmax);
  numerator = exp(n);
  denominator = sum(numerator,1); 
  denominator(denominator == 0) = 1;
  a = bsxfun(@rdivide,numerator,denominator);
end
function a = iSoftmaxApplyGPU(n)
  nmax = max(n,[],1);
  numerator = arrayfun(@iSoftmaxApplyGPUHelper1,n,nmax);
  denominator = sum(numerator,1);
  a = arrayfun(@iSoftmaxApplyGPUHelper2,numerator,denominator);
end
function numerator = iSoftmaxApplyGPUHelper1(n,nmax)
  numerator = exp(n - nmax);
end
function a = iSoftmaxApplyGPUHelper2(numerator,denominator)
  if (denominator == 0)
    a = numerator;
  else
    a = numerator ./ denominator;
  end
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end
